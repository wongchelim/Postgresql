In Primary
Create the user
CREATE USER replica REPLICATION LOGIN ENCRYPTED PASSWORD 'xxx';

Configure the postgresql.conf
vim postgresql.conf
listen_addresses = '*'
wall_level = hot_standby
max_wal_senders = 1
wall_keep_segments = 1
archive_mode = on
archive_command = 'cp -i %p /u01/app/PostgreSQL/10/data/archive/ %f'

Configure pg_hba.conf	
# replication privilege.
local   replication     all                                     md5
host    replication     replica         13.168.56.141/24       md5
host    replication     all             127.0.0.1/3            md5
host    replication     all             ::1/128                 md5

Restart db
 systemctl restart postgresql-10.service

Login to double check
show archive_command ;
show archive_mode ;
show wall_level ;
show max_wall_senders ;
show wall_keep_segments ;



In Secondary

Configure the postgresql.conf
vim postgresql.conf

listen_addresses = '*'
wall_level = hot_standby
max_wall_senders = 1
wal_keep_segments = 1
hot_standby = on

Stop the DB
systemctl stop postgresql-10.service

Backup the system data folder and its related data folder
-bash-4.2$ mv data data_original
-bash-4.2$ cd udata
-bash-4.2$ ls
PG_10_201707211
-bash-4.2$ rm -fr PG_10_201707211
-bash-4.2$ cd ..

	• Pass in back the postgresql.conf to the data folder before sync.
	
Start sync from the primary to the local standby
-bash-4.2$ pg_basebackup -h 13.168.56.140 -D /u01/app/PostgreSQL/10/data -U replica -v -P
Password:
pg_basebackup: initiating base backup, waiting for checkpoint to complete
pg_basebackup: checkpoint completed
pg_basebackup: write-ahead log start point: 0/60000028 on timeline 1
pg_basebackup: directory "/u01/app/PostgreSQL/10/udata" exists but is not empty
pg_basebackup: removing data directory "/u01/app/PostgreSQL/10/data"
-bash-4.2$ ls

Configure the recovery.conf inside the data folder
-bash-4.2$ cd data
-bash-4.2$ cp /u01/app/PostgreSQL/10/share/postgresql/recovery.conf.sample recovery.conf
-bash-4.2$ vim recovery.conf
Add below

# expect them to be interchangeable.
#
restore_command = 'cp /u01/app/PostgreSQL/10/data/archive/%f %p'                # e.g. 'cp /mnt/server/archivedir/%f %p'
#
#
…
# restore_command and/or primary_conninfo.
#
standby_mode = on
#
…
# connection string and receive XLOG records continuously.
#
primary_conninfo = 'host=13.168.56.140 port=5432 user=replica password=Password1'              # e.g. 'host=localhost port=5432'
#
# If set, the PostgreSQL server will use the specified replication slot when
…
# primary server when it's found.
#
trigger_file = '/tmp/postgresql.trigger.5555'
#


Start the standby db
[root@oel7postdb1 ~]# systemctl start postgresql-10.service
[root@oel7postdb1 ~]# systemctl status postgresql-10.service
